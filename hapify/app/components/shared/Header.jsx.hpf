import React from 'react';
import { NavLink } from 'react-router-dom';
import PropTypes from 'prop-types';
import { connect } from 'react-redux';
import classNames from 'classnames';
import Button from 'antd/lib/button';
import {
  LogoutOutlined, MenuOutlined, SelectOutlined, ToolOutlined, SettingOutlined,
} from '@ant-design/icons';
import Gravatar from 'react-gravatar';
 
import { setConfig } from '../../store/modules/globals';
import { logout } from '../../store/modules/auth';
 
import { isAdmin } from '../../utils/RolesUtils';
 
import appLogo from '../../../assets/images/logo-app.png';
 
const Header = ({
  menuIsOpen, menuIsTiny, account, setConf, doLogout,
}) => (
  <header className="header">
    <div className={classNames('header-menu', { tiny: menuIsTiny })}>
      <div className="container">
        <NavLink to="/" className="logo-block">
          <img src={appLogo} alt="Logo" className="logo" />
        </NavLink>
        <nav
          className={classNames(
            'main-nav',
            { 'animated opened': menuIsOpen === true },
            { 'animated closed': menuIsOpen === false },
          )}
        >
          <div href="/" className="mobile-logo-block">
            <img src={appLogo} alt="Logo" className="mobile-logo" />
          </div>
          { isAdmin(account) && (
            <div className="menu-title">Administrateurs :</div>
          )}
          { isAdmin(account) && (
            <ul>
              <li>
                <NavLink
                  to="/admin/options"
                  onClick={menuIsOpen === true ? () => setConf('menuIsOpen', false) : null}
                  exact
                  activeClassName="active"
                >
                  <ToolOutlined />
                  <span>Paramètres</span>
                </NavLink>
              </li>
              <<@ M /pMHd m>>
              <li>
                <NavLink
                  to="/admin/<<m aA>>s/table"
                  onClick={menuIsOpen === true ? () => setConf('menuIsOpen', false) : null}
                  exact
                  activeClassName="active"
                >
                  <SelectOutlined />
                  <span><<m A>></span>
                </NavLink>
              </li>
              <<@>>
            </ul>
          )}
          <div className="user-block">
            <div className="user-profil">
              <div className="user-avatar-block">
                <div className="user-avatar">
                  <Gravatar email={account.email} />
                </div>
              </div>
              <div className="user-name">{account.name}</div>
            </div>
            <div className="user-actions">
              <NavLink
                to="/user/account"
                onClick={menuIsOpen === true ? () => setConf('menuIsOpen', false) : null}
                exact
                activeClassName="active"
              >
                <Button icon={<SettingOutlined />} />
              </NavLink>
              <Button title="Déconnexion" icon={<LogoutOutlined />} onClick={doLogout} />
            </div>
          </div>
        </nav>
        <Button
          title="Menu"
          icon={<MenuOutlined />}
          className={classNames('menu-button', { 'menu-opened': menuIsOpen })}
          onClick={() => setConf('menuIsOpen', !menuIsOpen)}
        />
      </div>
    </div>
  </header>
);
 
Header.propTypes = {
  menuIsOpen: PropTypes.bool,
  menuIsTiny: PropTypes.bool,
  account: PropTypes.shape({
    name: PropTypes.string.isRequired,
    email: PropTypes.string.isRequired,
  }).isRequired,
 
  setConf: PropTypes.func.isRequired,
  doLogout: PropTypes.func,
};
 
export default connect(
  (state) => ({
    menuIsOpen: state.data.config.menuIsOpen,
    menuIsTiny: state.data.config.menuIsTiny,
    account: state.auth.user,
  }),
  { setConf: setConfig, doLogout: logout },
)(Header);
